# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Testing Dev

on:
  push:
    branches:
      - '*'
      - '!main'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ ubuntu-latest ] #, windows-latest, macos-latest ]
        php-versions: [ '7.3' ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl
          ini-values: post_max_size=256M, log_errors=1
          coverage: pcov
          tools: phpunit
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install dependencies
        run: |
          composer install --no-progress --prefer-dist --optimize-autoloader
          composer run-script post-install-cmd --no-interaction
      # Add a step to run migrations if required
      - name: Test with phpunit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml tests
      - name: "Upload coverage to Codecov"
        uses: codecov/codecov-action@v1.5.0
        if: matrix.operating-system == 'ubuntu-latest'
        continue-on-error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
          PHP: ${{ matrix.php-version }}
          OS: ${{ matrix.operating-system }}
        with:
          fail_ci_if_error: true
          env_vars: OS,PHP
          files: ./coverage.xml
